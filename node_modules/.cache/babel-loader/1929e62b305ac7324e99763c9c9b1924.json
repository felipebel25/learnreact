{"ast":null,"code":"import _regeneratorRuntime from \"/home/pegasus/Escritorio/cursos/react/platzi-badges/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/pegasus/Escritorio/cursos/react/platzi-badges/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/pegasus/Escritorio/cursos/react/platzi-badges/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/pegasus/Escritorio/cursos/react/platzi-badges/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/pegasus/Escritorio/cursos/react/platzi-badges/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/pegasus/Escritorio/cursos/react/platzi-badges/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/pegasus/Escritorio/cursos/react/platzi-badges/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/pegasus/Escritorio/cursos/react/platzi-badges/src/pages/BadgesRick.js\";\nimport React, { Component } from 'react';\nimport '../styles/Badge.css';\nimport '../components/styles/BadgesList.css';\nimport Skeleton, { SkeletonTheme } from '../components/skeleton';\nimport { Link } from 'react-router-dom';\nimport fetchRick from '../components/fetchrick';\nvar numero = 1;\nexport var BadgesRick =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BadgesRick, _React$Component);\n\n  function BadgesRick() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BadgesRick);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BadgesRick)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: true,\n      numero: 1,\n      data: {\n        results: []\n      }\n    };\n\n    _this.fetchData =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(api) {\n        var response, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.setState({\n                  loading: true,\n                  error: null\n                });\n\n                _context.prev = 1;\n                _context.next = 4;\n                return fetch(\"https://rickandmortyapi.com/api/character/?page=\".concat(_this.state.numero));\n\n              case 4:\n                response = _context.sent;\n                _context.next = 7;\n                return response.json();\n\n              case 7:\n                data = _context.sent;\n\n                _this.setState({\n                  loading: false,\n                  data: {\n                    info: data.info,\n                    results: [].concat(_this.state.data.results, data.results)\n                  },\n                  error: null,\n                  numero: _this.state.numero + 1\n                });\n\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](1);\n\n                _this.setState({\n                  loading: false,\n                  error: _context.t0\n                });\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 11]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(BadgesRick, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.loading) {\n        return React.createElement(Skeleton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"Badges__container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"Badgess\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.state.data.results.map(function (character) {\n        return React.createElement(\"li\", {\n          key: character.id,\n          className: \"Badge__li\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"Badge__imagen\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: character.image,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"Badge__textos\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, character.name), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"@\", character.status), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, character.species)));\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          _this2.fetchData();\n        },\n        className: \"btn btn-primary ml-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"punto\")));\n    }\n  }]);\n\n  return BadgesRick;\n}(React.Component);\nexport default BadgesRick;","map":{"version":3,"sources":["/home/pegasus/Escritorio/cursos/react/platzi-badges/src/pages/BadgesRick.js"],"names":["React","Component","Skeleton","SkeletonTheme","Link","fetchRick","numero","BadgesRick","state","loading","data","results","fetchData","api","setState","error","fetch","response","json","info","concat","map","character","id","image","name","status","species"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport '../styles/Badge.css';\nimport '../components/styles/BadgesList.css'\n\nimport Skeleton, { SkeletonTheme } from '../components/skeleton'\n\nimport { Link } from 'react-router-dom'\nimport fetchRick from '../components/fetchrick'\n\nlet numero = 1;\n\nexport class BadgesRick extends React.Component {\n    \n    state = {\n        \n        loading: true,\n        numero:1,\n       \n        data: {\n            results:[]\n        },\n    \n}\n    \n    componentDidMount(){\n        this.fetchData()\n        \n    }\n    fetchData= async (api) =>{\n        this.setState({loading: true, error: null })\n     try {\n         const response = await fetch(`https://rickandmortyapi.com/api/character/?page=${this.state.numero}`)\n         const data = await response.json()\n         this.setState({loading: false,\n            data:{\n                info: data.info,\n                results:[].concat(\n                    this.state.data.results,\n                    data.results\n                )\n            },\n             error: null,\n              numero: this.state.numero + 1})\n        \n        \n    }catch (error) {\n        this.setState({loading: false, error})\n         \n     }\n    }\n   \n    render() {\n        if(this.state.loading){\n            return(<Skeleton />)\n        }\n        return (\n            <div className=\"Badges__container\">\n            <ul  className=\"Badgess\">\n      \n         \n                            \n                        {this.state.data.results.map(character =>(\n                        <li key={character.id} className=\"Badge__li\">\n                            <div className=\"Badge__imagen\">\n                                <img src={character.image} alt=\"\"/>\n                            </div>\n                            <div className=\"Badge__textos\" >\n                              <p>{character.name}</p> \n                                <p>@{character.status}</p>\n                                <p>{character.species}</p>\n                            </div>\n                         </li> \n                         \n              ))}\n                       <button type=\"button\" onClick={\n                           ()=> {this.fetchData()}\n                       } className=\"btn btn-primary ml-4\">punto</button>\n               \n            </ul>\n            </div>\n                    \n        )\n    }\n}\n\nexport default BadgesRick\n"]},"metadata":{},"sourceType":"module"}