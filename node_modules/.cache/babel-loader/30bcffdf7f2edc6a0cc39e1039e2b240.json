{"ast":null,"code":"import _regeneratorRuntime from \"/home/pegasus/Escritorio/cursos/react/platzi-badges/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/pegasus/Escritorio/cursos/react/platzi-badges/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar BASE_URL = 'https://rickandmortyapi.com/api/character';\n\nfunction callApi() {\n  return _callApi.apply(this, arguments);\n}\n\nfunction _callApi() {\n  _callApi = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var url, response, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = BASE_URL;\n            _context.next = 3;\n            return fetch(url);\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return response.json();\n\n          case 6:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _callApi.apply(this, arguments);\n}\n\nvar api = {\n  badges: {\n    list: function list() {\n      // throw new Error('Not Found')\n      return callApi('/badges');\n    },\n    create: function create(badge) {\n      return callApi(\"/badges\", {\n        method: 'POST',\n        body: JSON.stringify(badge)\n      });\n    },\n    read: function read(badgeId) {\n      return callApi(\"/badges/\".concat(badgeId));\n    },\n    update: function update(badgeId, updates) {\n      return callApi(\"/badges/\".concat(badgeId), {\n        method: 'PUT',\n        body: JSON.stringify(updates)\n      });\n    },\n    // Lo hubiera llamado `delete`, pero `delete` es un keyword en JavaScript asi que no es buena idea :P\n    remove: function remove(badgeId) {\n      return callApi(\"/badges/\".concat(badgeId), {\n        method: 'DELETE'\n      });\n    }\n  }\n};\nexport default api;","map":{"version":3,"sources":["/home/pegasus/Escritorio/cursos/react/platzi-badges/src/components/fetchrick.js"],"names":["BASE_URL","callApi","url","fetch","response","json","data","api","badges","list","create","badge","method","body","JSON","stringify","read","badgeId","update","updates","remove"],"mappings":";;AAAA,IAAMA,QAAQ,GAAG,2CAAjB;;SAGeC,O;;;;;;;2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAGQC,YAAAA,GAHR,GAGcF,QAHd;AAAA;AAAA,mBAIyBG,KAAK,CAACD,GAAD,CAJ9B;;AAAA;AAIQE,YAAAA,QAJR;AAAA;AAAA,mBAKqBA,QAAQ,CAACC,IAAT,EALrB;;AAAA;AAKQC,YAAAA,IALR;AAAA,6CAOSA,IAPT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAUA,IAAMC,GAAG,GAAG;AACVC,EAAAA,MAAM,EAAE;AACNC,IAAAA,IADM,kBACC;AACL;AACA,aAAOR,OAAO,CAAC,SAAD,CAAd;AACD,KAJK;AAKNS,IAAAA,MALM,kBAKCC,KALD,EAKQ;AACZ,aAAOV,OAAO,YAAY;AACxBW,QAAAA,MAAM,EAAE,MADgB;AAExBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,KAAf;AAFkB,OAAZ,CAAd;AAID,KAVK;AAWNK,IAAAA,IAXM,gBAWDC,OAXC,EAWQ;AACZ,aAAOhB,OAAO,mBAAYgB,OAAZ,EAAd;AACD,KAbK;AAcNC,IAAAA,MAdM,kBAcCD,OAdD,EAcUE,OAdV,EAcmB;AACvB,aAAOlB,OAAO,mBAAYgB,OAAZ,GAAuB;AACnCL,QAAAA,MAAM,EAAE,KAD2B;AAEnCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeI,OAAf;AAF6B,OAAvB,CAAd;AAID,KAnBK;AAoBN;AACAC,IAAAA,MArBM,kBAqBCH,OArBD,EAqBU;AACd,aAAOhB,OAAO,mBAAYgB,OAAZ,GAAuB;AACnCL,QAAAA,MAAM,EAAE;AAD2B,OAAvB,CAAd;AAGD;AAzBK;AADE,CAAZ;AA8BA,eAAeL,GAAf","sourcesContent":["const BASE_URL = 'https://rickandmortyapi.com/api/character';\n\n\nasync function callApi() {\n\n\n  const url = BASE_URL ;\n  const response = await fetch(url);\n  const data = await response.json();\n\n  return data;\n}\n\nconst api = {\n  badges: {\n    list() {\n      // throw new Error('Not Found')\n      return callApi('/badges');\n    },\n    create(badge) {\n      return callApi(`/badges`, {\n        method: 'POST',\n        body: JSON.stringify(badge),\n      });\n    },\n    read(badgeId) {\n      return callApi(`/badges/${badgeId}`);\n    },\n    update(badgeId, updates) {\n      return callApi(`/badges/${badgeId}`, {\n        method: 'PUT',\n        body: JSON.stringify(updates),\n      });\n    },\n    // Lo hubiera llamado `delete`, pero `delete` es un keyword en JavaScript asi que no es buena idea :P\n    remove(badgeId) {\n      return callApi(`/badges/${badgeId}`, {\n        method: 'DELETE',\n      });\n    },\n  },\n};\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}