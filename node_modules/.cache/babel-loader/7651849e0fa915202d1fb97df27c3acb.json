{"ast":null,"code":"import _slicedToArray from\"/home/pegasus/Escritorio/cursos/react/platzi-badges/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Component}from'react';import{Link}from'react-router-dom';import'./styles/BadgesList.css';import'../styles/Badge.css';import Gravatar from'./Gravatar';function useSearchBadges(badges){var _React$useState=React.useState(''),_React$useState2=_slicedToArray(_React$useState,2),query=_React$useState2[0],setQuery=_React$useState2[1];var _React$useState3=React.useState(badges),_React$useState4=_slicedToArray(_React$useState3,2),filteredBadges=_React$useState4[0],setFilteredBadges=_React$useState4[1];React.useMemo(function(){var result=badges.filter(function(badge){return\" \".concat(badge.firstName).concat(badge.lastName).toLowerCase().includes(query.toLowerCase());});setFilteredBadges(result);},[badges,query]);return{query:query,setQuery:setQuery,filteredBadges:filteredBadges};}function BadgesList(props){var badges=props.badges;var _useSearchBadges=useSearchBadges(badges),query=_useSearchBadges.query,setQuery=_useSearchBadges.setQuery,filteredBadges=_useSearchBadges.filteredBadges;if(filteredBadges.length===0){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h3\",null,\"No badges were found\"),/*#__PURE__*/React.createElement(Link,{className:\"btn btn-primary\",to:\"/badges/new\"},\"Create new badge\"));}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"form-group p-2\"},/*#__PURE__*/React.createElement(\"label\",null,\"filter Badges\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control\",value:query,onChange:function onChange(e){setQuery(e.target.value);}})),/*#__PURE__*/React.createElement(\"ul\",{className:\"Badgess\"},filteredBadges.reverse().map(function(badges){return/*#__PURE__*/React.createElement(\"li\",{key:badges.id,className:\"Badge__li\"},/*#__PURE__*/React.createElement(\"div\",{className:\"Badge__imagen\"},/*#__PURE__*/React.createElement(Gravatar,{email:badges.email,className:\"Badge__avatar\",width:\"60\",alt:\"\"})),/*#__PURE__*/React.createElement(Link,{className:\"text-reset text-decoration-none Badge__textos\",to:\"/badges/\".concat(badges.id)},/*#__PURE__*/React.createElement(\"div\",{className:\"Badge__textos\"},/*#__PURE__*/React.createElement(\"p\",null,badges.firstName,\" \",badges.lastName),/*#__PURE__*/React.createElement(\"p\",null,\"@\",badges.twitter),/*#__PURE__*/React.createElement(\"p\",null,badges.jobTitle))));})));}export default BadgesList;","map":{"version":3,"sources":["/home/pegasus/Escritorio/cursos/react/platzi-badges/src/components/BadgesList.js"],"names":["React","Component","Link","Gravatar","useSearchBadges","badges","useState","query","setQuery","filteredBadges","setFilteredBadges","useMemo","result","filter","badge","firstName","lastName","toLowerCase","includes","BadgesList","props","length","e","target","value","reverse","map","id","email","twitter","jobTitle"],"mappings":"sIAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAO,yBAAP,CACA,MAAO,qBAAP,CAEA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CAEA,QAASC,CAAAA,eAAT,CAAyBC,MAAzB,CAAgC,qBACFL,KAAK,CAACM,QAAN,CAAe,EAAf,CADE,oDACvBC,KADuB,qBACfC,QADe,0CAGcR,KAAK,CAACM,QAAN,CAAeD,MAAf,CAHd,qDAGvBI,cAHuB,qBAGPC,iBAHO,qBAK7BV,KAAK,CAACW,OAAN,CACE,UAAI,CAAC,GAAMC,CAAAA,MAAM,CAAGP,MAAM,CAACQ,MAAP,CAAc,SAAAC,KAAK,CAAG,CAC3C,MAAM,WAAIA,KAAK,CAACC,SAAV,SAAsBD,KAAK,CAACE,QAA5B,EAAuCC,WAAvC,GAAqDC,QAArD,CAA8DX,KAAK,CAACU,WAAN,EAA9D,CAAN,CACA,CAFqB,CAAf,CAIPP,iBAAiB,CAACE,MAAD,CAAjB,CAEF,CAPE,CAOD,CAACP,MAAD,CAASE,KAAT,CAPC,EAQH,MAAM,CAAEA,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAmBC,cAAc,CAAdA,cAAnB,CAAN,CACC,CAED,QAASU,CAAAA,UAAT,CAAqBC,KAArB,CAA4B,CACvB,GAAMf,CAAAA,MAAM,CAAGe,KAAK,CAACf,MAArB,CADuB,qBAGsBD,eAAe,CAACC,MAAD,CAHrC,CAGdE,KAHc,kBAGdA,KAHc,CAGNC,QAHM,kBAGNA,QAHM,CAGIC,cAHJ,kBAGIA,cAHJ,CAOtB,GAAGA,cAAc,CAACY,MAAf,GAA0B,CAA7B,CAA+B,CAC7B,mBACE,4CAEE,qDAFF,cAGE,oBAAC,IAAD,EAAM,SAAS,CAAC,iBAAhB,CAAkC,EAAE,CAAC,aAArC,qBAHF,CADF,CASC,CACP,mBACI,4CACE,2BAAK,SAAS,CAAC,gBAAf,eACI,iDADJ,cAEI,6BACE,IAAI,CAAC,MADP,CAEE,SAAS,CAAC,cAFZ,CAGE,KAAK,CAAEd,KAHT,CAIE,QAAQ,CAAE,kBAACe,CAAD,CAAK,CACfd,QAAQ,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR,CACD,CAND,EAFJ,CADF,cAWI,0BAAI,SAAS,CAAC,SAAd,EAEGf,cAAc,CAACgB,OAAf,GAAyBC,GAAzB,CAA6B,SAACrB,MAAD,CAAU,CACtC,mBACE,0BAAI,GAAG,CAAEA,MAAM,CAACsB,EAAhB,CAAoB,SAAS,CAAC,WAA9B,eACE,2BAAK,SAAS,CAAC,eAAf,eACE,oBAAC,QAAD,EAAU,KAAK,CAAEtB,MAAM,CAACuB,KAAxB,CAA+B,SAAS,CAAC,eAAzC,CAAyD,KAAK,CAAC,IAA/D,CAAoE,GAAG,CAAC,EAAxE,EADF,CADF,cAIE,oBAAC,IAAD,EAAM,SAAS,CAAC,+CAAhB,CAAgE,EAAE,mBAAavB,MAAM,CAACsB,EAApB,CAAlE,eAEA,2BAAK,SAAS,CAAC,eAAf,eACE,6BAAItB,MAAM,CAACU,SAAX,KAAuBV,MAAM,CAACW,QAA9B,CADF,cAEE,iCAAKX,MAAM,CAACwB,OAAZ,CAFF,cAGE,6BAAIxB,MAAM,CAACyB,QAAX,CAHF,CAFA,CAJF,CADF,CAgBG,CAjBJ,CAFH,CAXJ,CADJ,CAoCD,CAED,cAAeX,CAAAA,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './styles/BadgesList.css'\nimport '../styles/Badge.css';\n\nimport Gravatar from './Gravatar'\n\nfunction useSearchBadges(badges){\n  const [query , setQuery ] = React.useState('')\n\n  const [filteredBadges ,setFilteredBadges] = React.useState(badges)\n\n   React.useMemo(\n     ()=>{const result = badges.filter(badge =>{\n    return` ${badge.firstName}${badge.lastName}`.toLowerCase().includes(query.toLowerCase())\n   })\n\n   setFilteredBadges(result)\n\n},[badges, query]);\nreturn{ query, setQuery, filteredBadges}\n}\n\nfunction BadgesList (props) {\n     const badges = props.badges;\n\n      const { query , setQuery, filteredBadges} = useSearchBadges(badges)\n\n\n\n      if(filteredBadges.length === 0){\n        return(\n          <div>\n         \n            <h3>No badges were found</h3>\n            <Link className=\"btn btn-primary\" to=\"/badges/new\">\n              Create new badge\n            </Link>\n          </div>\n        )\n        }\n  return (\n      <div>\n        <div className=\"form-group p-2\">\n            <label>filter Badges</label>\n            <input\n              type=\"text\" \n              className=\"form-control\"\n              value={query}\n              onChange={(e)=>{\n              setQuery(e.target.value)\n            }}/>\n        </div>  \n          <ul className=\"Badgess\">\n         \n            {filteredBadges.reverse().map((badges)=>{\n              return (\n                <li key={badges.id} className=\"Badge__li\" >\n                  <div className=\"Badge__imagen\">\n                    <Gravatar email={badges.email} className=\"Badge__avatar\" width=\"60\" alt=\"\"/>\n                  </div>\n                  <Link className=\"text-reset text-decoration-none Badge__textos\" to={`/badges/${badges.id}`}>\n\n                  <div className=\"Badge__textos\" >\n                    <p>{badges.firstName} {badges.lastName}</p> \n                    <p>@{badges.twitter}</p>\n                    <p>{badges.jobTitle}</p>\n                  </div>\n                            \n                </Link>\n                </li>\n                )\n                })}\n          </ul>\n      </div>\n        )\n    \n}\n\nexport default BadgesList\n"]},"metadata":{},"sourceType":"module"}