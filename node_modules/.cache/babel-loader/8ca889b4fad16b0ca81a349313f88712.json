{"ast":null,"code":"import _regeneratorRuntime from \"/home/pegasus/Escritorio/cursos/react/platzi-badges/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/pegasus/Escritorio/cursos/react/platzi-badges/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/pegasus/Escritorio/cursos/react/platzi-badges/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/pegasus/Escritorio/cursos/react/platzi-badges/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/pegasus/Escritorio/cursos/react/platzi-badges/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/pegasus/Escritorio/cursos/react/platzi-badges/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/pegasus/Escritorio/cursos/react/platzi-badges/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/pegasus/Escritorio/cursos/react/platzi-badges/src/pages/Badges.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './styles/Badges.css';\nimport confLogo from \"../images/badge-header.svg\";\nimport BadgesList from '../components/BadgesList';\nimport Skeleton, { SkeletonTheme } from '../components/skeleton';\nimport PageError from '../components/PageError';\nimport api from '../api';\nimport { datatype } from 'faker';\nexport var Badges =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Badges, _Component);\n\n  function Badges(props) {\n    var _this;\n\n    _classCallCheck(this, Badges);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Badges).call(this, props));\n    _this.fetchData =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true,\n                error: null\n              });\n\n              _context.prev = 1;\n              _context.next = 4;\n              return api.badges.list();\n\n            case 4:\n              data = _context.sent;\n\n              _this.setState({\n                loading: false,\n                data: data,\n                error: null\n              });\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n\n              _this.setState({\n                loading: false,\n                error: _context.t0\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n    _this.fetchRick =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var response, datar;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return fetch(\"https://rickandmortyapi.com/api/character\");\n\n            case 3:\n              response = _context2.sent;\n              _context2.next = 6;\n              return response.json();\n\n            case 6:\n              datar = _context2.sent;\n\n              _this.setState({\n                datar: datar\n              });\n\n              console.log(datar);\n              _context2.next = 13;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](0);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 11]]);\n    }));\n    _this.state = {\n      loading: true,\n      error: null,\n      data: undefined,\n      datar: undefined\n    };\n    console.log('1. constructor');\n    return _this;\n  }\n\n  _createClass(Badges, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.error) {\n        return React.createElement(PageError, {\n          error: this.state.error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Badges\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Badges\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Badges__hero\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Badges__container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"Badges_conf-logo img-fluid\",\n        src: confLogo,\n        alt: \"Conf Logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"Badges__container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Badges_buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/badges/new\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"New File\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary ml-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"hola\")), React.createElement(\"div\", {\n        className: \"Badges__list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Badges__container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.state.loading === true && this.state.data === undefined ? React.createElement(Skeleton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }) : React.createElement(BadgesList, {\n        badges: this.state.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })), this.state.laoding && 'Loading...')));\n    }\n  }]);\n\n  return Badges;\n}(Component);\nexport default Badges;","map":{"version":3,"sources":["/home/pegasus/Escritorio/cursos/react/platzi-badges/src/pages/Badges.js"],"names":["React","Component","Link","BadgesList","Skeleton","SkeletonTheme","PageError","api","datatype","Badges","props","fetchData","setState","loading","error","badges","list","data","fetchRick","fetch","response","json","datar","console","log","state","undefined","confLogo","laoding"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './styles/Badges.css'\nimport confLogo from '../images/badge-header.svg'\nimport BadgesList from '../components/BadgesList'\nimport Skeleton, { SkeletonTheme } from '../components/skeleton'\nimport PageError from '../components/PageError'\nimport api from '../api'\nimport { datatype } from 'faker'\n\nexport class Badges extends Component {\n  \n  \n  constructor(props){\n      super(props)\n      this.state = {\n            loading: true,\n            error: null, \n            data: undefined,\n            datar: undefined,\n        \n    }\n      console.log('1. constructor')\n    }\n    componentDidMount(){\n      this.fetchData()\n\n    }\n    componentWillUnmount(){\n\n    }\n    fetchData = async () =>{\n      this.setState({loading: true, error: null})\n      try{\n        const data= await api.badges.list();\n        this.setState({loading: false,data, error: null})\n      }catch(error){\n        this.setState({loading: false, error})\n\n      }\n    }\n  \n    fetchRick= async ()=>{\n   \n      try{\n        const response= await fetch(`https://rickandmortyapi.com/api/character`);\n        const datar = await response.json()\n        this.setState({datar})\n        console.log(datar)\n      }catch(error){\n        \n        \n        \n      }\n    }\n    \n   \n    render() {\n\n\n\n      if(this.state.error){\n        return(\n          <PageError error={this.state.error} />\n        ) ;\n\n      }\n       \n        return (\n            <div>\n                     <div className=\"Badges\">\n                        <div className=\"Badges\">\n                        <div className=\"Badges__hero\">\n                            <div className=\"Badges__container\">\n                            <img\n                                className=\"Badges_conf-logo img-fluid\"\n                                src={confLogo}\n                                alt=\"Conf Logo\"\n                            />\n                            </div>\n                        </div>\n                    </div>\n                  </div>\n               <div className=\"Badges__container\">\n                   <div className=\"Badges_buttons\">\n                        <Link to=\"/badges/new\" className=\"btn btn-primary\">New File</Link>\n                        <button type=\"button\"  className=\"btn btn-primary ml-4\">hola</button>\n                   </div>\n\n                    <div className=\"Badges__list\">\n                    <div className=\"Badges__container\">\n                            {this.state.loading === true &&this.state.data === undefined\n                            ?\n                               <Skeleton />\n                               \n                               :\n                               <BadgesList\n                                badges={this.state.data}\n                                 />\n                              }\n                          </div>\n                              {this.state.laoding && 'Loading...'}\n\n                     </div>\n                     \n                     </div>\n               \n            </div>\n        )\n    }\n}\n\nexport default Badges\n"]},"metadata":{},"sourceType":"module"}