{"ast":null,"code":"import _regeneratorRuntime from \"/home/pegasus/Escritorio/cursos/react/platzi-badges/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/pegasus/Escritorio/cursos/react/platzi-badges/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/pegasus/Escritorio/cursos/react/platzi-badges/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/pegasus/Escritorio/cursos/react/platzi-badges/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/pegasus/Escritorio/cursos/react/platzi-badges/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/pegasus/Escritorio/cursos/react/platzi-badges/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/pegasus/Escritorio/cursos/react/platzi-badges/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/pegasus/Escritorio/cursos/react/platzi-badges/src/components/fetchrick.js\";\nimport React, { Component } from 'react';\nimport PageLoading from '../components/PageLoading';\nimport BadgeRick from '../components/BadgeRick';\nimport api from '../api';\n\nvar fetchrick =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(fetchrick, _React$Component);\n\n  function fetchrick() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, fetchrick);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(fetchrick)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: true,\n      error: null,\n      data: undefined,\n      modalIsOpen: false\n    };\n    _this.fetchData =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true,\n                error: null\n              });\n\n              _context.prev = 1;\n              _context.next = 4;\n              return fetch(\"https://rickandmortyapi.com/api/character/\".concat(_this.props.match.params.characterId));\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              data = _context.sent;\n\n              _this.setState({\n                loading: false,\n                data: data\n              });\n\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n\n              _this.setState({\n                loading: false,\n                error: _context.t0\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 11]]);\n    }));\n    return _this;\n  }\n\n  _createClass(fetchrick, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loading) {\n        return React.createElement(PageLoading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        });\n      }\n\n      var badge = this.state.data;\n      return React.createElement(BadgeRick, {\n        img: badge.image,\n        firstName: badge.name,\n        jobTitle: badge.status,\n        twitter: badge.location.name,\n        almohada: badge.species,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return fetchrick;\n}(React.Component);\n\nexport default fetchrick;","map":{"version":3,"sources":["/home/pegasus/Escritorio/cursos/react/platzi-badges/src/components/fetchrick.js"],"names":["React","Component","PageLoading","BadgeRick","api","fetchrick","state","loading","error","data","undefined","modalIsOpen","fetchData","setState","fetch","props","match","params","characterId","response","json","badge","image","name","status","location","species"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,GAAP,MAAgB,QAAhB;;IAGMC,S;;;;;;;;;;;;;;;;;UACFC,K,GAAO;AACHC,MAAAA,OAAO,EAAE,IADN;AAEHC,MAAAA,KAAK,EAAC,IAFH;AAGHC,MAAAA,IAAI,EAAEC,SAHH;AAIHC,MAAAA,WAAW,EAAE;AAJV,K;UAUPC,S;;;;6BAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AACR,oBAAKC,QAAL,CAAc;AAACN,gBAAAA,OAAO,EAAC,IAAT;AAAeC,gBAAAA,KAAK,EAAC;AAArB,eAAd;;AADQ;AAAA;AAAA,qBAGmBM,KAAK,qDACmB,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,WAD3C,EAHxB;;AAAA;AAGEC,cAAAA,QAHF;AAAA;AAAA,qBAOkBA,QAAQ,CAACC,IAAT,EAPlB;;AAAA;AAOIX,cAAAA,IAPJ;;AAQJ,oBAAKI,QAAL,CAAc;AAACN,gBAAAA,OAAO,EAAE,KAAV;AAAiBE,gBAAAA,IAAI,EAACA;AAAtB,eAAd;;AARI;AAAA;;AAAA;AAAA;AAAA;;AAUA,oBAAKI,QAAL,CAAc;AAACN,gBAAAA,OAAO,EAAE,KAAV;AAAiBC,gBAAAA,KAAK;AAAtB,eAAd;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;wCAJO;AACf,WAAKI,SAAL;AACH;;;6BAgBY;AACT,UAAG,KAAKN,KAAL,CAAWC,OAAd,EAAsB;AAClB,eAAO,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AAGL,UAAMc,KAAK,GAAG,KAAKf,KAAL,CAAWG,IAAzB;AACI,aACE,oBAAC,SAAD;AACE,QAAA,GAAG,EAAEY,KAAK,CAACC,KADb;AAEE,QAAA,SAAS,EAAED,KAAK,CAACE,IAFnB;AAGE,QAAA,QAAQ,EAAEF,KAAK,CAACG,MAHlB;AAIE,QAAA,OAAO,EAAEH,KAAK,CAACI,QAAN,CAAeF,IAJ1B;AAKE,QAAA,QAAQ,EAAEF,KAAK,CAACK,OALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUH;;;;EA1CmB1B,KAAK,CAACC,S;;AA6C9B,eAAeI,SAAf","sourcesContent":["import React, { Component } from 'react'\n\nimport PageLoading from '../components/PageLoading'\nimport BadgeRick from '../components/BadgeRick'\nimport api from '../api'\n\n\nclass fetchrick extends React.Component {\n    state ={\n        loading: true,\n        error:null,\n        data: undefined,\n        modalIsOpen: false,\n    }\n    componentDidMount(){\n        this.fetchData()\n    }\n   \n    fetchData = async () =>{\n        this.setState({loading:true, error:null})\n        try {\n            const response = await fetch(\n              `https://rickandmortyapi.com/api/character/${this.props.match.params.characterId}`\n              \n              );\n              const data = await  response.json()\n            this.setState({loading: false, data:data})\n            } catch (error) {\n                this.setState({loading: false, error:error})\n                \n            }\n        } \n        render() {\n        if(this.state.loading){\n            return <PageLoading/>\n        }\n        \n\n    const badge = this.state.data;\n        return (\n          <BadgeRick \n            img={badge.image}\n            firstName={badge.name}\n            jobTitle={badge.status}\n            twitter={badge.location.name}\n            almohada={badge.species}\n            \n          />\n        )\n    }\n}\n\nexport default fetchrick\n"]},"metadata":{},"sourceType":"module"}